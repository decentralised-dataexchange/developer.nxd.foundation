---
paths:
  "/connections":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/ConnectionList"
          description: ''
      parameters:
      - in: query
        name: alias
        required: false
        type: string
        description: Alias
        example: Barry
      - in: query
        name: initiator
        required: false
        type: string
        enum:
        - self
        - external
        description: Connection initiator
      - in: query
        name: invitation_key
        required: false
        type: string
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        description: invitation key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      - in: query
        name: my_did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: My DID
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: state
        required: false
        type: string
        enum:
        - init
        - invitation
        - request
        - response
        - active
        - error
        - inactive
        description: Connection state
      - in: query
        name: their_did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: Their DID
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: their_role
        required: false
        type: string
        description: Their assigned connection role
        example: Point of contact
      tags:
      - Connection
      summary: Query agent-to-agent connections
      produces:
      - application/json
  "/connections/{conn_id}":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/ConnectionRecord"
          description: ''
      parameters:
      - in: path
        name: conn_id
        required: true
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Connection
      summary: Fetch a single connection record
      produces:
      - application/json
    delete:
      responses: {}
      parameters:
      - in: path
        name: conn_id
        required: true
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Connection
      summary: Remove an existing connection record
      produces:
      - application/json
  "/connections/create-invitation":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/InvitationResult"
          description: ''
      parameters:
      - in: query
        name: alias
        required: false
        type: string
        description: Alias
        example: Barry
      - in: query
        name: auto_accept
        required: false
        type: boolean
        description: Auto-accept connection (default as per configuration)
      - in: query
        name: multi_use
        required: false
        type: boolean
        description: Create invitation for multiple use (default false)
      - in: query
        name: public
        required: false
        type: boolean
        description: Create invitation from public DID (default false)
      tags:
      - Connection
      summary: Create a new connection invitation
      produces:
      - application/json
  "/connections/receive-invitation":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/ConnectionRecord"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/ReceiveInvitationRequest"
      - in: query
        name: alias
        required: false
        type: string
        description: Alias
        example: Barry
      - in: query
        name: auto_accept
        required: false
        type: boolean
        description: Auto-accept connection (defaults to configuration)
      tags:
      - Connection
      summary: Receive a new connection invitation
      produces:
      - application/json
  "/credential/{credential_id}":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/CredBrief"
          description: ''
      parameters:
      - in: path
        name: credential_id
        required: true
        type: string
        description: Credential identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credentials
      summary: Fetch a credential from wallet by id
      produces:
      - application/json
    delete:
      responses: {}
      parameters:
      - in: path
        name: credential_id
        required: true
        type: string
        description: Credential identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credentials
      summary: Remove a credential from the wallet by id
      produces:
      - application/json
  "/credentials":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/CredBriefList"
          description: ''
      parameters:
      - in: query
        name: count
        required: false
        type: integer
        format: int32
        minimum: 1
        description: Maximum number to retrieve
        example: 10
      - in: query
        name: start
        required: false
        type: integer
        format: int32
        minimum: 0
        description: Start index
        example: 0
      - in: query
        name: wql
        required: false
        type: string
        pattern: "^{.*}$"
        description: "(JSON) WQL query"
        example: '{"attr::name::value": "Alex"}'
      tags:
      - Credentials
      summary: Fetch credentials from wallet
      produces:
      - application/json
  "/ledger/register-nym":
    post:
      responses: {}
      parameters:
      - in: query
        name: did
        required: true
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID to register
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: verkey
        required: true
        type: string
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        description: Verification key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      - in: query
        name: alias
        required: false
        type: string
        description: Alias
        example: Barry
      - in: query
        name: role
        required: false
        type: string
        enum:
        - STEWARD
        - TRUSTEE
        - ENDORSER
        - NETWORK_MONITOR
        - reset
        description: Role
      tags:
      - Trust Anchor
      summary: Send a NYM registration to the ledger.
      produces:
      - application/json
  "/ledger/get-nym-role":
    get:
      responses: {}
      parameters:
      - in: query
        name: did
        required: true
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
      tags:
      - Trust Anchor
      summary: Get the role from the NYM registration of a public DID.
      produces:
      - application/json
  "/ledger/rotate-public-did-keypair":
    patch:
      responses: {}
      parameters: []
      tags:
      - Trust Anchor
      summary: Rotate key pair for public DID.
      produces:
      - application/json
  "/ledger/did-verkey":
    get:
      responses: {}
      parameters:
      - in: query
        name: did
        required: true
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
      tags:
      - Trust Anchor
      summary: Get the verkey for a DID from the ledger.
      produces:
      - application/json
  "/ledger/did-endpoint":
    get:
      responses: {}
      parameters:
      - in: query
        name: did
        required: true
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: endpoint_type
        required: false
        type: string
        enum:
        - Endpoint
        - Profile
        - LinkedDomains
        description: Endpoint type of interest (default 'Endpoint')
        example: Endpoint
      tags:
      - Trust Anchor
      summary: Get the endpoint for a DID from the ledger.
      produces:
      - application/json
  "/ledger/taa":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/TAAResult"
          description: ''
      parameters: []
      tags:
      - Trust Anchor
      summary: Fetch the current transaction author agreement, if any
      produces:
      - application/json
  "/ledger/taa/accept":
    post:
      responses: {}
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/TAAAccept"
      tags:
      - Trust Anchor
      summary: Accept the transaction author agreement
      produces:
      - application/json
  "/credential-definitions":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/CredentialDefinitionSendResults"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/CredentialDefinitionSendRequest"
      tags:
      - Credential Definition
      summary: Sends a credential definition to the ledger
      produces:
      - application/json
  "/credential-definitions/created":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/CredentialDefinitionsCreatedResults"
          description: ''
      parameters:
      - in: query
        name: cred_def_id
        required: false
        type: string
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        description: Credential definition id
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
      - in: query
        name: issuer_did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: Issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: schema_id
        required: false
        type: string
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
      - in: query
        name: schema_issuer_did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: Schema issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: schema_name
        required: false
        type: string
        description: Schema name
        example: membership
      - in: query
        name: schema_version
        required: false
        type: string
        pattern: "^[0-9.]+$"
        description: Schema version
        example: '1.0'
      tags:
      - Credential Definition
      summary: Search for matching credential definitions that agent originated
      produces:
      - application/json
  "/credential-definitions/{cred_def_id}":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/CredentialDefinitionGetResults"
          description: ''
      parameters:
      - in: path
        name: cred_def_id
        required: true
        type: string
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
      tags:
      - Credential Definition
      summary: Gets a credential definition from the ledger
      produces:
      - application/json
  "/schemas":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/SchemaSendResults"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/SchemaSendRequest"
      tags:
      - Schema
      summary: Sends a schema to the ledger
      produces:
      - application/json
  "/schemas/created":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/SchemasCreatedResults"
          description: ''
      parameters:
      - in: query
        name: schema_id
        required: false
        type: string
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
      - in: query
        name: schema_issuer_did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: Schema issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: schema_name
        required: false
        type: string
        description: Schema name
        example: membership
      - in: query
        name: schema_version
        required: false
        type: string
        pattern: "^[0-9.]+$"
        description: Schema version
        example: '1.0'
      tags:
      - Schema
      summary: Search for matching schema that agent originated
      produces:
      - application/json
  "/schemas/{schema_id}":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/SchemaGetResults"
          description: ''
      parameters:
      - in: path
        name: schema_id
        required: true
        type: string
        pattern: "^[1-9][0-9]*|[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
      tags:
      - Schema
      summary: Gets a schema from the ledger
      produces:
      - application/json
  "/wallet/did":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/DIDList"
          description: ''
      parameters:
      - in: query
        name: did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: posture
        required: false
        type: string
        enum:
        - public
        - posted
        - wallet_only
        description: Whether DID is current public DID, posted to ledger but current
          public DID, or local to the wallet
        example: wallet_only
      - in: query
        name: verkey
        required: false
        type: string
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        description: Verification key of interest
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      tags:
      - Wallet
      summary: List wallet DIDs
      produces:
      - application/json
  "/wallet/did/create":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/DIDResult"
          description: ''
      parameters: []
      tags:
      - Wallet
      summary: Create a local DID
      produces:
      - application/json
  "/wallet/did/public":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/DIDResult"
          description: ''
      parameters: []
      tags:
      - Wallet
      summary: Fetch the current public DID
      produces:
      - application/json
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/DIDResult"
          description: ''
      parameters:
      - in: query
        name: did
        required: true
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
      tags:
      - Wallet
      summary: Assign the current public DID
      produces:
      - application/json
  "/wallet/set-did-endpoint":
    post:
      responses: {}
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/DIDEndpointWithType"
      tags:
      - Wallet
      summary: Update endpoint in wallet and on ledger if posted to it
      produces:
      - application/json
  "/wallet/get-did-endpoint":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/DIDEndpoint"
          description: ''
      parameters:
      - in: query
        name: did
        required: true
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
      tags:
      - Wallet
      summary: Query DID endpoint in wallet
      produces:
      - application/json
  "/wallet/did/local/rotate-keypair":
    patch:
      responses: {}
      parameters:
      - in: query
        name: did
        required: true
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
      tags:
      - Wallet
      summary: Rotate keypair for a DID not posted to the ledger
      produces:
      - application/json
  "/v1/mydata-did/didcomm/read-did/{did}":
    post:
      responses: {}
      parameters:
      - in: path
        name: did
        required: true
        type: string
        pattern: "^did:mydata(:?(?P<did_type>0|1|2|3|4))?:(?P<identifier>z[a-km-zA-HJ-NP-Z1-9]+)"
        description: did:mydata identifier
        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
      tags:
      - MyData DID
      summary: Send read-did didcomm message to MyData DID registry
      produces:
      - application/json
  "/v1/mydata-did/remote":
    get:
      responses:
        '200':
          schema:
            type: array
            items:
              "$ref": "#/definitions/MyDataDIDRemoteRecordResponse"
          description: ''
      parameters:
      - in: query
        name: did
        required: false
        type: string
        pattern: "^did:mydata(:?(?P<did_type>0|1|2|3|4))?:(?P<identifier>z[a-km-zA-HJ-NP-Z1-9]+)"
        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
        description: MyData decentralised identifier
      - in: query
        name: sov_verkey
        required: false
        type: string
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        description: Sovrin verkey
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      - in: query
        name: status
        required: false
        type: string
        enum:
        - active
        - revoked
        description: MyData DID remote status
      tags:
      - MyData DID
      summary: Fetch MyData DID remote records.
      produces:
      - application/json
  "/v1/data-agreements":
    post:
      responses:
        '201':
          schema:
            "$ref": "#/definitions/DataAgreementV1RecordResponse"
          description: ''
        '422':
          description: Unprocessable Entity (invalid request payload)
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/CreateOrUpdateDataAgreementInWalletRequest"
      - in: query
        name: existing_schema_id
        required: false
        type: string
        description: Existing schema identifier
        example: issuer_did:1:schema:1
      - in: query
        name: publish_flag
        required: false
        type: boolean
        description: Publish the agreement
        example: false
      tags:
      - Data Agreement
      summary: Create and store data agreement template in wallet
      produces:
      - application/json
    get:
      responses:
        '200':
          schema:
            type: array
            items:
              "$ref": "#/definitions/DataAgreementV1RecordResponse"
          description: ''
      parameters:
      - in: query
        name: delete_flag
        required: false
        type: boolean
        description: Query deleted templates
      - in: query
        name: latest_version_flag
        required: false
        type: boolean
        description: Latest version of the template
      - in: query
        name: method_of_use
        required: false
        type: string
        enum:
        - data-source
        - data-using-service
        description: Method of use
      - in: query
        name: page
        required: false
        type: integer
        format: int32
        description: Page number
        example: 1
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
        description: Page size
        example: 10
      - in: query
        name: publish_flag
        required: false
        type: boolean
        description: Query published templates
      - in: query
        name: template_id
        required: false
        type: string
        description: Template identifier
      - in: query
        name: template_version
        required: false
        type: string
        description: Template version
      - in: query
        name: third_party_data_sharing
        required: false
        type: boolean
        description: Third party data sharing
      tags:
      - Data Agreement
      summary: Query data agreement templates in the wallet
      produces:
      - application/json
  "/v1/data-agreements/{template_id}/publish":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/DataAgreementV1RecordResponse"
          description: ''
        '400':
          description: Bad Request (invalid request payload)
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
      tags:
      - Data Agreement
      summary: Publish data agreement templates in the wallet
      produces:
      - application/json
  "/v1/data-agreements/{template_id}":
    put:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/DataAgreementV1RecordResponse"
          description: ''
        '400':
          description: Bad Request (invalid request payload)
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/CreateOrUpdateDataAgreementInWalletRequest"
      - in: path
        name: template_id
        required: true
        type: string
        description: Template identifier
      - in: query
        name: existing_schema_id
        required: false
        type: string
      - in: query
        name: publish_flag
        required: false
        type: boolean
      tags:
      - Data Agreement
      summary: Update data agreement template in the wallet
      produces:
      - application/json
    delete:
      responses:
        '204':
          description: No Content (data agreement deleted)
        '400':
          description: Bad Request (invalid request payload)
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
        description: Template identifier
      tags:
      - Data Agreement
      summary: Delete data agreement template in the wallet
      produces:
      - application/json
  "/v1/data-agreements/personal-data":
    get:
      responses:
        '200':
          schema:
            type: array
            items:
              "$ref": "#/definitions/DataAgreementPersonalDataRecord"
          description: ''
      parameters:
      - in: query
        name: method_of_use
        required: false
        type: string
        enum:
        - data-source
        - data-using-service
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      - in: query
        name: template_id
        required: false
        type: string
      - in: query
        name: third_party_data_sharing
        required: false
        type: boolean
      tags:
      - Data Agreement
      summary: Query data agreement personal data in wallet
      produces:
      - application/json
  "/v1/data-agreements/personal-data/{attribute_id}":
    put:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/UpdateDaPersonalDataInWalletResponse"
          description: ''
        '400':
          description: Bad Request (invalid request payload)
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/UpdateDaPersonalDataInWalletRequest"
      - in: path
        name: attribute_id
        required: true
        type: string
        description: Personal data identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Data Agreement
      summary: Update personal data description in wallet.
      produces:
      - application/json
    delete:
      responses:
        '204':
          description: No Content (data agreement personal data deleted)
        '400':
          description: Bad Request (invalid request payload)
      parameters:
      - in: path
        name: attribute_id
        required: true
        type: string
        description: Personal data identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Data Agreement
      summary: Delete personal data in wallet
      produces:
      - application/json
  "/v1/auditor/data-agreements/instances":
    get:
      responses:
        '200':
          schema:
            type: array
            items:
              "$ref": "#/definitions/DataAgreementInstance"
          description: ''
      parameters:
      - in: query
        name: data_ex_id
        required: false
        type: string
      - in: query
        name: data_subject_did
        required: false
        type: string
      - in: query
        name: instance_id
        required: false
        type: string
      - in: query
        name: method_of_use
        required: false
        type: string
        enum:
        - data-source
        - data-using-service
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      - in: query
        name: template_id
        required: false
        type: string
      - in: query
        name: template_version
        required: false
        type: string
      - in: query
        name: third_party_data_sharing
        required: false
        type: boolean
      tags:
      - Auditor
      summary: Query data agreement instances
      produces:
      - application/json
  "/v1/data-agreements/{template_id}/customer-identification":
    post:
      responses: {}
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
      tags:
      - Data Agreement
      summary: Configure customer identification data agreement.
      produces:
      - application/json
  "/v1/data-agreements/customer-identification":
    get:
      responses: {}
      parameters: []
      tags:
      - Data Agreement
      summary: Fetch customer identification data agreement.
      produces:
      - application/json
  "/v1/.well-known/did-configuration.json":
    get:
      responses: {}
      parameters: []
      tags:
      - Connection
      summary: Well-known endpoint for connection
      produces:
      - application/json
  "/v1/data-agreements/{template_id}/qr":
    post:
      responses:
        '201':
          schema:
            "$ref": "#/definitions/GenerateDataAgreementQrCodePayloadResponse"
          description: ''
        '400':
          "$ref": "#/responses/Bad Request"
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
      - in: query
        name: multi_use
        required: false
        type: boolean
      tags:
      - Data Agreement
      summary: Generate Data Agreement QR code payload
      produces:
      - application/json
    get:
      responses:
        '200':
          schema:
            type: array
            items:
              "$ref": "#/definitions/QueryDataAgreementQRCodeMetadataRecordsResponse"
          description: ''
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
        description: Template identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Data Agreement
      summary: Query Data Agreement QR code metadata records
      produces:
      - application/json
  "/v1/data-agreements/{template_id}/qr/{qr_id}":
    delete:
      responses:
        '204':
          description: Success
      parameters:
      - in: path
        name: qr_id
        required: true
        type: string
      - in: path
        name: template_id
        required: true
        type: string
      tags:
      - Data Agreement
      summary: Delete Data Agreement QR code record.
      produces:
      - application/json
  "/v1/data-agreements/qr/{qr_id}/workflow-initiate/connections/{connection_id}":
    post:
      responses: {}
      parameters:
      - in: path
        name: connection_id
        required: true
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      - in: path
        name: qr_id
        required: true
        type: string
        description: QR code identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Data Agreement
      summary: Send data agreement qr code workflow initiate message to remote agent
      produces:
      - application/json
  "/v1/json-ld/didcomm/processed-data/connections/{connection_id}":
    post:
      responses:
        '204':
          description: Success
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/SendJSONLDDIDCommProcessedDataMessageHandlerRequest"
      - in: path
        name: connection_id
        required: true
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - JSON-LD
      summary: Send JSON-LD processed-data didcomm message to the remote agent.
      produces:
      - application/json
  "/v2/connections/create-invitation":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V2InvitationResult"
          description: ''
      parameters:
      - in: query
        name: alias
        required: false
        type: string
        description: Alias
        example: Barry
      - in: query
        name: auto_accept
        required: false
        type: boolean
        description: Auto-accept connection (default as per configuration)
      - in: query
        name: multi_use
        required: false
        type: boolean
        description: Create invitation for multiple use (default false)
      - in: query
        name: public
        required: false
        type: boolean
        description: Create invitation from public DID (default false)
      tags:
      - Connection
      summary: Create a new connection invitation (Overridden API)
      produces:
      - application/json
  "/v2/connections/receive-invitation":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/ConnectionRecord"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V2ReceiveConnectionInvitationRequest"
      - in: query
        name: alias
        required: false
        type: string
        description: Alias
        example: Barry
      - in: query
        name: auto_accept
        required: false
        type: boolean
        description: Auto-accept connection (defaults to configuration)
      tags:
      - Connection
      summary: Receive a new connection invitation
      produces:
      - application/json
  "/v1/connections/{conn_id}/invitation/firebase":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/GenerateFirebaseDynamicLinkForConnectionInvitationResponse"
          description: ''
      parameters:
      - in: path
        name: conn_id
        required: true
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Connection
      summary: Generate firebase dynamic link for connection invitation
      produces:
      - application/json
  "/v1/data-controller/didcomm/details/connections/{connection_id}":
    post:
      responses:
        '200':
          description: Success
      parameters:
      - in: path
        name: connection_id
        required: true
        type: string
      tags:
      - Data Controller
      summary: Send data controller details message to remote agent hosted by Data
        Controller
      produces:
      - application/json
  "/v1/connections/{conn_id}/existing":
    post:
      responses:
        '200':
          description: Success
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/SendExistingConnectionsMessageHandlerRequest"
      - in: path
        name: conn_id
        required: true
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Connection
      summary: Send existing connections message to remote agent.
      produces:
      - application/json
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/GetExistingConnectionResponse"
          description: ''
      parameters:
      - in: path
        name: conn_id
        required: true
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Connection
      summary: Fetch existing connection details if any for a current connection.
      produces:
      - application/json
  "/v2/connections":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/ConnectionList1"
          description: ''
      parameters:
      - in: query
        name: alias
        required: false
        type: string
        description: Alias
        example: Barry
      - in: query
        name: initiator
        required: false
        type: string
        enum:
        - self
        - external
        description: Connection initiator
      - in: query
        name: invitation_key
        required: false
        type: string
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        description: invitation key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      - in: query
        name: marketplace_flag
        required: false
        type: boolean
      - in: query
        name: my_did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: My DID
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: org_flag
        required: false
        type: boolean
      - in: query
        name: page
        required: false
        type: integer
        format: int32
        description: Page number
        example: 1
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
        description: Page size
        example: 10
      - in: query
        name: state
        required: false
        type: string
        enum:
        - init
        - invitation
        - request
        - response
        - active
        - error
        - inactive
        description: Connection state
      - in: query
        name: their_did
        required: false
        type: string
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        description: Their DID
        example: WgWxqztrNooG92RXvxSTWv
      - in: query
        name: their_role
        required: false
        type: string
        description: Their assigned connection role
        example: Point of contact
      tags:
      - Connection
      summary: Query agent-to-agent connections (v2)
      produces:
      - application/json
  "/v1/data-controller":
    post:
      responses: {}
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/UpdateControllerDetailsRequest"
      tags:
      - Data Controller
      summary: Update data controller details
      produces:
      - application/json
  "/v1/data-agreements/instances/{instance_id}/permissions":
    post:
      responses: {}
      parameters:
      - in: path
        name: instance_id
        required: true
        type: string
      - in: query
        name: state
        required: true
        type: string
        enum:
        - allow
        - disallow
        description: Permission state
      tags:
      - Data Agreement
      summary: Set permissions for data agreement.
      produces:
      - application/json
  "/v1/data-subject/third-party-data-sharing/fetch-preferences":
    post:
      responses: {}
      parameters:
      - in: query
        name: connection_id
        required: false
        type: string
      tags:
      - Data Subject
      summary: Send fetch preference message.
      produces:
      - application/json
  "/v1/data-subject/third-party-data-sharing/update-preferences/dda/{dda_instance_id}/da/{da_instance_id}":
    post:
      responses: {}
      parameters:
      - in: path
        name: da_instance_id
        required: true
        type: string
      - in: path
        name: dda_instance_id
        required: true
        type: string
      - in: query
        name: state
        required: true
        type: string
        enum:
        - allow
        - disallow
        description: Permission state
      tags:
      - Data Subject
      summary: Send update preferences message.
      produces:
      - application/json
  "/v1/data-disclosure-agreements":
    post:
      responses: {}
      parameters:
      - in: query
        name: da_template_id
        required: false
        type: string
      - in: query
        name: publish_flag
        required: false
        type: boolean
      tags:
      - Data Disclosure Agreements
      summary: Create a data disclosure agreement template.
      produces:
      - application/json
    get:
      responses: {}
      parameters:
      - in: query
        name: delete_flag
        required: false
        type: boolean
      - in: query
        name: industry_sector
        required: false
        type: string
      - in: query
        name: latest_version_flag
        required: false
        type: boolean
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      - in: query
        name: publish_flag
        required: false
        type: boolean
      - in: query
        name: template_id
        required: false
        type: string
      - in: query
        name: template_version
        required: false
        type: string
      tags:
      - Data Disclosure Agreements
      summary: Query data disclosure agreement templates.
      produces:
      - application/json
  "/v1/data-disclosure-agreements/{template_id}":
    post:
      responses: {}
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
      - in: query
        name: publish_flag
        required: true
        type: boolean
      tags:
      - Data Disclosure Agreements
      summary: Update DDA template.
      produces:
      - application/json
    delete:
      responses: {}
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
      tags:
      - Data Disclosure Agreements
      summary: Delete DDA template.
      produces:
      - application/json
  "/v1/data-disclosure-agreements/{template_id}/publish":
    post:
      responses: {}
      parameters:
      - in: path
        name: template_id
        required: true
        type: string
      tags:
      - Data Disclosure Agreements
      summary: Publish DDA template.
      produces:
      - application/json
  "/v1/data-disclosure-agreements/{template_id}/marketplace/{connection_id}":
    post:
      responses: {}
      parameters:
      - in: path
        name: connection_id
        required: true
        type: string
      - in: path
        name: template_id
        required: true
        type: string
      tags:
      - Data Disclosure Agreements
      summary: Publish DDA to marketplace
      produces:
      - application/json
  "/v1/data-disclosure-agreements/marketplace":
    get:
      responses: {}
      parameters:
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      tags:
      - Data Disclosure Agreements
      summary: List DDA published in marketplace.
      produces:
      - application/json
  "/v1/data-disclosure-agreements/{template_id}/request/connections/{connection_id}":
    post:
      responses: {}
      parameters:
      - in: path
        name: connection_id
        required: true
        type: string
      - in: path
        name: template_id
        required: true
        type: string
      tags:
      - Data Disclosure Agreements
      summary: Request DDA offer from Data Source.
      produces:
      - application/json
  "/v1/auditor/data-disclosure-agreements/instances":
    get:
      responses: {}
      parameters:
      - in: query
        name: connection_id
        required: false
        type: string
      - in: query
        name: instance_id
        required: false
        type: string
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      - in: query
        name: template_id
        required: false
        type: string
      - in: query
        name: template_version
        required: false
        type: string
      tags:
      - Auditor
      summary: Query DDA instances
      produces:
      - application/json
  "/v1/auditor/data-disclosure-agreements/pulldata-records":
    get:
      responses: {}
      parameters:
      - in: query
        name: dda_instance_id
        required: false
        type: string
      - in: query
        name: dda_template_id
        required: false
        type: string
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      tags:
      - Auditor
      summary: Query pull data records.
      produces:
      - application/json
  "/v1/data-disclosure-agreements/instances/{instance_id}/deactivate":
    post:
      responses: {}
      parameters:
      - in: path
        name: instance_id
        required: true
        type: string
      tags:
      - Data Disclosure Agreements
      summary: Deactivate DDA.
      produces:
      - application/json
  "/v1/data-disclosure-agreements/instances/{instance_id}/pulldata":
    post:
      responses: {}
      parameters:
      - in: path
        name: instance_id
        required: true
        type: string
      tags:
      - Data Disclosure Agreements
      summary: Send pull data request.
      produces:
      - application/json
  "/v1/data-marketplace/connections/{connection_id}":
    post:
      responses: {}
      parameters:
      - in: path
        name: connection_id
        required: true
        type: string
      tags:
      - Data Marketplace
      summary: Mark a connection as data marketplace
      produces:
      - application/json
  "/v1/data-marketplace/connections":
    get:
      responses: {}
      parameters:
      - in: query
        name: connection_id
        required: false
        type: string
      tags:
      - Data Marketplace
      summary: Query marketplace connections
      produces:
      - application/json
  "/v1/data-marketplace/published-dda":
    get:
      responses: {}
      parameters:
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      tags:
      - Data Marketplace
      summary: Query published DDA templates.
      produces:
      - application/json
  "/v1/data-marketplace/{connection_id}/published-dda":
    get:
      responses: {}
      parameters:
      - in: path
        name: connection_id
        required: true
        type: string
      tags:
      - Data Marketplace
      summary: Query published DDA tempates for a marketplace connection
      produces:
      - application/json
  "/issue-credential/records":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchangeListResult"
          description: ''
      parameters:
      - in: query
        name: connection_id
        required: false
        type: string
        format: uuid
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      - in: query
        name: role
        required: false
        type: string
        enum:
        - issuer
        - holder
        description: Role assigned in credential exchange
      - in: query
        name: state
        required: false
        type: string
        enum:
        - proposal_sent
        - proposal_received
        - offer_sent
        - offer_received
        - request_sent
        - request_received
        - credential_issued
        - credential_received
        - credential_acked
        description: Credential exchange state
      - in: query
        name: template_id
        required: false
        type: string
      - in: query
        name: thread_id
        required: false
        type: string
        format: uuid
        description: Thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Fetch all credential exchange records
      produces:
      - application/json
  "/issue-credential/records/{cred_ex_id}":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: path
        name: cred_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Fetch a single credential exchange record
      produces:
      - application/json
    delete:
      responses: {}
      parameters:
      - in: path
        name: cred_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Remove an existing credential exchange record
      produces:
      - application/json
  "/issue-credential/create":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V10CredentialCreate"
      tags:
      - Credential Issuance
      summary: Send holder a credential, automating entire flow
      produces:
      - application/json
  "/issue-credential/send":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V10CredentialProposalRequestMand"
      tags:
      - Credential Issuance
      summary: Send holder a credential, automating entire flow
      produces:
      - application/json
  "/issue-credential/send-proposal":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V10CredentialProposalRequestOpt"
      tags:
      - Credential Issuance
      summary: Send issuer a credential proposal
      produces:
      - application/json
  "/issue-credential/send-offer":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V10CredentialOfferRequest"
      tags:
      - Credential Issuance
      summary: Send holder a credential offer, independent of any proposal
      produces:
      - application/json
  "/issue-credential/records/{cred_ex_id}/send-offer":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: path
        name: cred_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Send holder a credential offer in reference to a proposal with preview
      produces:
      - application/json
  "/issue-credential/records/{cred_ex_id}/send-request":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: path
        name: cred_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Send issuer a credential request
      produces:
      - application/json
  "/issue-credential/records/{cred_ex_id}/issue":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V10CredentialIssueRequest"
      - in: path
        name: cred_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Send holder a credential
      produces:
      - application/json
  "/issue-credential/records/{cred_ex_id}/store":
    post:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10CredentialExchange"
          description: ''
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V10CredentialStoreRequest"
      - in: path
        name: cred_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Store a received credential
      produces:
      - application/json
  "/issue-credential/records/{cred_ex_id}/problem-report":
    post:
      responses: {}
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/V10CredentialProblemReportRequest"
      - in: path
        name: cred_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Credential Issuance
      summary: Send a problem report for credential exchange
      produces:
      - application/json
  "/present-proof/records":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10PresentationExchangeList"
          description: ''
      parameters:
      - in: query
        name: connection_id
        required: false
        type: string
        format: uuid
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      - in: query
        name: page
        required: false
        type: integer
        format: int32
      - in: query
        name: page_size
        required: false
        type: integer
        format: int32
      - in: query
        name: role
        required: false
        type: string
        enum:
        - prover
        - verifier
        description: Role assigned in presentation exchange
      - in: query
        name: state
        required: false
        type: string
        enum:
        - proposal_sent
        - proposal_received
        - request_sent
        - request_received
        - presentation_sent
        - presentation_received
        - verified
        - presentation_acked
        description: Presentation exchange state
      - in: query
        name: template_id
        required: false
        type: string
      - in: query
        name: thread_id
        required: false
        type: string
        format: uuid
        description: Thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Verification
      summary: Fetch all present-proof exchange records
      produces:
      - application/json
  "/present-proof/records/{pres_ex_id}":
    get:
      responses:
        '200':
          schema:
            "$ref": "#/definitions/V10PresentationExchange"
          description: ''
      parameters:
      - in: path
        name: pres_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Presentation exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Verification
      summary: Fetch a single presentation exchange record
      produces:
      - application/json
    delete:
      responses: {}
      parameters:
      - in: path
        name: pres_ex_id
        required: true
        type: string
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        description: Presentation exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      tags:
      - Verification
      summary: Remove an existing presentation exchange record
      produces:
      - application/json
  "/present-proof/data-agreement-negotiation/offer":
    post:
      responses: {}
      parameters:
      - in: body
        required: false
        name: body
        schema:
          "$ref": "#/definitions/SendPresentationRequestForDataAgreementRequest"
      tags:
      - Verification
      summary: Send a presentation request in reference to a data agreement
      produces:
      - application/json
info:
  title: Data Intermediation Service Provider APIs
  version: 2024.4.1
swagger: '2.0'
definitions:
  AMLRecord:
    properties:
      aml:
        additionalProperties:
          type: string
        type: object
      amlContext:
        type: string
      version:
        type: string
    type: object
  AdminModules:
    properties:
      result:
        description: List of admin modules
        items:
          description: admin module
          type: string
        type: array
    type: object
  AdminStatus:
    properties: {}
    type: object
  AdminStatusLiveliness:
    properties:
      alive:
        description: Liveliness status
        example: true
        type: boolean
    type: object
  AdminStatusReadiness:
    properties:
      ready:
        description: Readiness status
        example: true
        type: boolean
    type: object
  AttachDecorator:
    properties:
      "@id":
        description: Attachment identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      byte_count:
        description: Byte count of data included by reference
        example: 1234
        format: int32
        type: integer
      data:
        "$ref": "#/definitions/AttachDecoratorData"
      description:
        description: Human-readable description of content
        example: view from doorway, facing east, with lights off
        type: string
      filename:
        description: File name
        example: IMG1092348.png
        type: string
      lastmod_time:
        description: Hint regarding last modification datetime, in ISO-8601 format
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
      mime-type:
        description: MIME type
        example: image/png
        type: string
    required:
    - data
    type: object
  AttachDecoratorData:
    properties:
      base64:
        description: Base64-encoded data
        example: ey4uLn0=
        pattern: "^[a-zA-Z0-9+/]*={0,2}$"
        type: string
      json:
        description: JSON-serialized data
        example: '{"sample": "content"}'
        type: object
      jws:
        allOf:
        - "$ref": "#/definitions/AttachDecoratorDataJWS"
        description: Detached Java Web Signature
      links:
        description: List of hypertext links to data
        items:
          example: https://link.to/data
          type: string
        type: array
      sha256:
        description: SHA256 hash (binhex encoded) of content
        example: 617a48c7c8afe0521efdc03e5bb0ad9e655893e6b4b51f0e794d70fba132aacb
        pattern: "^[a-fA-F0-9+/]{64}$"
        type: string
    type: object
  AttachDecoratorData1JWS:
    properties:
      header:
        "$ref": "#/definitions/AttachDecoratorDataJWSHeader"
      protected:
        description: protected JWS header
        example: ey4uLn0
        pattern: "^[-_a-zA-Z0-9]*$"
        type: string
      signature:
        description: signature
        example: ey4uLn0
        pattern: "^[-_a-zA-Z0-9]*$"
        type: string
    required:
    - header
    - signature
    type: object
  AttachDecoratorDataJWS:
    properties:
      header:
        "$ref": "#/definitions/AttachDecoratorDataJWSHeader"
      protected:
        description: protected JWS header
        example: ey4uLn0
        pattern: "^[-_a-zA-Z0-9]*$"
        type: string
      signature:
        description: signature
        example: ey4uLn0
        pattern: "^[-_a-zA-Z0-9]*$"
        type: string
      signatures:
        description: List of signatures
        items:
          "$ref": "#/definitions/AttachDecoratorData1JWS"
        type: array
    type: object
  AttachDecoratorDataJWSHeader:
    properties:
      kid:
        description: Key identifier, in W3C did:key or DID URL format
        example: did:sov:LjgpST2rjsoxYegQDRm7EL#keys-4
        pattern: "^did:(?:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+|sov:[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}(;.*)?(\\?.*)?#.+)$"
        type: string
    required:
    - kid
    type: object
  AttachmentDef:
    properties:
      id:
        type: string
      type:
        type: string
    type: object
  AttributeMimeTypesResult:
    properties: {}
    type: object
  ClearPendingRevocationsRequest:
    properties:
      purge:
        additionalProperties:
          items:
            description: Credential revocation identifier
            example: '12345'
            pattern: "^[1-9][0-9]*$"
            type: string
          type: array
        description: 'Credential revocation ids by revocation registry id: omit for
          all, specify null or empty list for all pending per revocation registry'
        type: object
    type: object
  ConnectionInvitation:
    properties:
      "@id":
        description: Message identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      "@type":
        description: Message type
        example: https://didcomm.org/my-family/1.0/my-message-type
        readOnly: true
        type: string
      did:
        description: DID for connection invitation
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      imageUrl:
        description: Optional image URL for connection invitation
        example: http://192.168.56.101/img/logo.jpg
        format: url
        type: string
        x-nullable: true
      label:
        description: Optional label for connection
        example: Bob
        type: string
      recipientKeys:
        description: List of recipient keys
        items:
          description: Recipient public key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
          pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          type: string
        type: array
      routingKeys:
        description: List of routing keys
        items:
          description: Routing key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
          pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          type: string
        type: array
      serviceEndpoint:
        description: Service endpoint at which to reach this agent
        example: http://192.168.56.101:8020
        type: string
    type: object
  ConnectionList:
    properties:
      results:
        description: List of connection records
        items:
          "$ref": "#/definitions/ConnectionRecord"
        type: array
    type: object
  ConnectionList1:
    properties:
      results:
        description: List of connection records
        items:
          "$ref": "#/definitions/ConnectionRecord"
        type: array
    type: object
  ConnectionRecord:
    properties:
      accept:
        description: 'Connection acceptance: manual or auto'
        enum:
        - manual
        - auto
        example: auto
        type: string
      alias:
        description: Optional alias to apply to connection for later use
        example: Bob, providing quotes
        type: string
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      created_at:
        description: Time of record creation
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
      error_msg:
        description: Error message
        example: No DIDDoc provided; cannot connect to public DID
        type: string
      inbound_connection_id:
        description: Inbound routing connection id to use
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      initiator:
        description: 'Connection initiator: self, external, or multiuse'
        enum:
        - self
        - external
        - multiuse
        example: self
        type: string
      invitation_key:
        description: Public key for connection
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        type: string
      invitation_mode:
        description: 'Invitation mode: once, multi, or static'
        enum:
        - once
        - multi
        - static
        example: once
        type: string
      my_did:
        description: Our DID for connection
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      request_id:
        description: Connection request identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      routing_state:
        description: Routing state of connection
        example: active
        type: string
      state:
        description: Current record state
        example: active
        type: string
      their_did:
        description: Their DID for connection
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      their_label:
        description: Their label for connection
        example: Bob
        type: string
      their_role:
        description: Their assigned role for connection
        example: Point of contact
        type: string
      trust_anchor:
        description: Trust anchor for connection
        example: sovrinlive
        type: string
      updated_at:
        description: Time of last record update
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
    type: object
  ConnectionStaticRequest:
    properties:
      alias:
        description: Alias to assign to this connection
        type: string
      my_did:
        description: Local DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      my_seed:
        description: Seed to use for the local DID
        type: string
      their_did:
        description: Remote DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      their_endpoint:
        description: URL endpoint for the other party
        example: https://myhost:8021
        pattern: "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        type: string
      their_label:
        description: Label to assign to this connection
        type: string
      their_role:
        description: Role to assign to this connection
        example: Point of contact
        type: string
      their_seed:
        description: Seed to use for the remote DID
        type: string
      their_verkey:
        description: Remote verification key
        type: string
    type: object
  ConnectionStaticResult:
    properties:
      mv_verkey:
        description: My verification key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        type: string
      my_did:
        description: Local DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      my_endpoint:
        description: My URL endpoint
        example: https://myhost:8021
        pattern: "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        type: string
      record:
        "$ref": "#/definitions/ConnectionRecord"
      their_did:
        description: Remote DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      their_verkey:
        description: Remote verification key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        type: string
    required:
    - mv_verkey
    - my_did
    - my_endpoint
    - record
    - their_did
    - their_verkey
    type: object
  CreateOrUpdateDataAgreementInWalletRequest:
    properties:
      dataControllerName:
        type: string
      dataControllerUrl:
        type: string
      dataPolicy:
        "$ref": "#/definitions/DataPolicyOpenAPI"
      dpia:
        "$ref": "#/definitions/DPIAOpenAPI"
      language:
        type: string
      lawfulBasis:
        type: string
      methodOfUse:
        type: string
      personalData:
        items:
          "$ref": "#/definitions/PersonalDataOpenAPI"
        type: array
      purpose:
        type: string
      purposeDescription:
        type: string
    type: object
  CredAttrSpec:
    properties:
      mime-type:
        description: 'MIME type: omit for (null) default'
        example: image/jpeg
        type: string
        x-nullable: true
      name:
        description: Attribute name
        example: favourite_drink
        type: string
      value:
        description: 'Attribute value: base64-encode if MIME type is present'
        example: martini
        type: string
    required:
    - name
    - value
    type: object
  CredBrief:
    properties:
      attrs:
        additionalProperties:
          description: Attribute value
          type: string
        description: Attribute names mapped to their raw values
        type: object
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      cred_rev_id:
        description: Credential revocation identifier
        example: '12345'
        pattern: "^[1-9][0-9]*$"
        type: string
      referent:
        description: Credential referent
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      rev_reg_id:
        description: Revocation registry identifier
        example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        type: string
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
    type: object
  CredBriefList:
    properties:
      results:
        items:
          "$ref": "#/definitions/CredBrief"
        type: array
    type: object
  CredRevRecordResult:
    properties: {}
    type: object
  CredRevokedResult:
    properties:
      revoked:
        description: Whether credential is revoked on the ledger
        type: boolean
    type: object
  CredentialDefinition:
    properties:
      id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      schemaId:
        description: Schema identifier within credential definition identifier
        example: '20'
        type: string
      tag:
        description: Tag within credential definition identifier
        example: tag
        type: string
      type:
        default: CL
        description: 'Signature type: CL for Camenisch-Lysyanskaya'
        example: CL
      value:
        description: Credential definition primary and revocation values
        type: object
      ver:
        description: Node protocol version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
    type: object
  CredentialDefinitionGetResults:
    properties:
      credential_definition:
        "$ref": "#/definitions/CredentialDefinition"
    type: object
  CredentialDefinitionSendRequest:
    properties:
      revocation_registry_size:
        description: Revocation registry size
        example: 1000
        format: int32
        maximum: 32768
        minimum: 4
        type: integer
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
      support_revocation:
        description: Revocation supported flag
        type: boolean
      tag:
        description: Credential definition identifier tag
        example: default
        type: string
    type: object
  CredentialDefinitionSendResults:
    properties:
      credential_definition_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
    type: object
  CredentialDefinitionsCreatedResults:
    properties:
      credential_definition_ids:
        items:
          description: Credential definition identifiers
          example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
          pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
          type: string
        type: array
    type: object
  CredentialPreview:
    properties:
      "@type":
        description: Message type identifier
        example: issue-credential/1.0/credential-preview
        type: string
      attributes:
        items:
          "$ref": "#/definitions/CredAttrSpec"
        type: array
    required:
    - attributes
    type: object
  DAIndyProofReqAttrSpec:
    properties:
      name:
        description: Attribute name
        example: favouriteDrink
        type: string
      names:
        description: Attribute name group
        items:
          example: age
          type: string
        type: array
      non_revoked:
        "$ref": "#/definitions/DAIndyProofReqNonRevoked"
      restrictions:
        description: 'If present, credential must satisfy one of given restrictions:
          specify schema_id, schema_issuer_did, schema_name, schema_version, issuer_did,
          cred_def_id, and/or attr::<attribute-name>::value where <attribute-name>
          represents a credential attribute name'
        items:
          additionalProperties:
            example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
            type: string
          type: object
        type: array
    type: object
  DAIndyProofReqNonRevoked:
    properties:
      from:
        description: Earliest epoch of interest for non-revocation proof
        example: 1712397495
        format: int32
        maximum: 9223372036854776000
        minimum: -9223372036854776000
        type: integer
      to:
        description: Latest epoch of interest for non-revocation proof
        example: 1712397495
        format: int32
        maximum: 9223372036854776000
        minimum: -9223372036854776000
        type: integer
    type: object
  DAIndyProofReqPredSpec:
    properties:
      name:
        description: Attribute name
        example: index
        type: string
      non_revoked:
        "$ref": "#/definitions/DAIndyProofReqNonRevoked"
      p_type:
        description: Predicate type ('<', '<=', '>=', or '>')
        enum:
        - "<"
        - "<="
        - ">="
        - ">"
        example: ">="
        type: string
      p_value:
        description: Threshold value
        format: int32
        type: integer
      restrictions:
        description: If present, credential must satisfy one of given restrictions
        items:
          "$ref": "#/definitions/DAIndyProofReqPredSpecRestrictions"
        type: array
    required:
    - name
    - p_type
    - p_value
    type: object
  DAIndyProofReqPredSpecRestrictions:
    properties:
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      issuer_did:
        description: Credential issuer DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
      schema_issuer_did:
        description: Schema issuer (origin) DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_name:
        description: Schema name
        example: transcript
        type: string
      schema_version:
        description: Schema version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
    type: object
  DAIndyProofRequest:
    properties:
      name:
        description: Proof request name
        example: Proof request
        type: string
      non_revoked:
        "$ref": "#/definitions/DAIndyProofReqNonRevoked"
      nonce:
        description: Nonce
        example: '1234567890'
        type: string
      requested_attributes:
        additionalProperties:
          "$ref": "#/definitions/DAIndyProofReqAttrSpec"
        description: Requested attribute specifications of proof request
        type: object
      requested_predicates:
        additionalProperties:
          "$ref": "#/definitions/DAIndyProofReqPredSpec"
        description: Requested predicate specifications of proof request
        type: object
      version:
        description: Proof request version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
    required:
    - requested_attributes
    - requested_predicates
    type: object
  DID:
    properties:
      did:
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      posture:
        description: Whether DID is current public DID, posted to ledger but not current
          public DID, or local to the wallet
        enum:
        - public
        - posted
        - wallet_only
        example: wallet_only
        type: string
      verkey:
        description: Public verification key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        type: string
    type: object
  DIDEndpoint:
    properties:
      did:
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      endpoint:
        description: Endpoint to set (omit to delete)
        example: https://myhost:8021
        pattern: "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        type: string
    required:
    - did
    type: object
  DIDEndpointWithType:
    properties:
      did:
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      endpoint:
        description: Endpoint to set (omit to delete)
        example: https://myhost:8021
        pattern: "^[A-Za-z0-9\\.\\-\\+]+://([A-Za-z0-9][.A-Za-z0-9-]+[A-Za-z0-9])+(:[1-9][0-9]*)?(/[^?&#]+)?$"
        type: string
      endpoint_type:
        description: Endpoint type to set (default 'Endpoint'); affects only public
          or posted DIDs
        enum:
        - Endpoint
        - Profile
        - LinkedDomains
        example: Endpoint
        type: string
    required:
    - did
    type: object
  DIDList:
    properties:
      results:
        description: DID list
        items:
          "$ref": "#/definitions/DID"
        type: array
    type: object
  DIDResult:
    properties:
      result:
        "$ref": "#/definitions/DID"
    type: object
  DPIAOpenAPI:
    properties:
      dpiaDate:
        type: string
      dpiaSummaryUrl:
        type: string
    type: object
  DataAgreementDPIA:
    properties:
      dpia_date:
        description: DPIA conducted date time in ISO 8601 UTC date time format
        example: '2024-04-06T09:58:38.584611+00:00'
        type: string
      dpia_summary_url:
        description: DPIA summary URL
        example: https://org.com/dpia_results.html
        type: string
    type: object
  DataAgreementDataPolicy:
    properties:
      data_retention_period:
        description: Data retention period in days
        example: 365
        format: int32
        type: integer
      geographic_restriction:
        description: Geographic restriction
        example: Europe
        type: string
      industry_sector:
        description: Industry scope
        example: Healthcare
        type: string
      jurisdiction:
        description: Jurisdiction
        example: Sweden
        type: string
      policy_URL:
        description: Policy URL
        example: https://clarifyhealth.com/privacy-policy/
        type: string
      storage_location:
        description: Storage location
        example: Europe
        type: string
      third_party_data_sharing:
        description: Third party data sharing
        example: false
        type: boolean
    required:
    - data_retention_period
    - geographic_restriction
    - jurisdiction
    - policy_URL
    - storage_location
    - third_party_data_sharing
    type: object
  DataAgreementEvent:
    properties:
      did:
        description: MyData decentralised identifier
        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
        pattern: "^did:mydata(:?(?P<did_type>0|1|2|3|4))?:(?P<identifier>z[a-km-zA-HJ-NP-Z1-9]+)"
        type: string
      id:
        description: Data agreement event identifier
        example: did:mydata:123456789abcdefghi#1
        type: string
      state:
        description: State of the event
        example: capture
        type: string
      time_stamp:
        description: Data agreement event timestamp in ISO 8601 UTC date time format
        example: '2024-04-06T09:58:38.587215+00:00'
        type: string
    type: object
  DataAgreementInstance:
    properties:
      "@context":
        description: Context
        example:
        - https://raw.githubusercontent.com/decentralised-dataexchange/automated-data-agreements/main/interface-specs/data-agreement-schema/v1/data-agreement-schema-context.jsonld
        - https://w3id.org/security/v2
        items:
          type: string
        type: array
      data_controller_name:
        description: PII controller name
        example: Happy Shopping AB
        type: string
      data_controller_url:
        description: PII controller URL
        example: https://www.happyshopping.com
        type: string
      data_policy:
        allOf:
        - "$ref": "#/definitions/DataAgreementDataPolicy"
        description: Data policy
      data_subject_did:
        description: Principle did
        example: did:mydata:123456789abcdefghi
        type: string
      dpia:
        allOf:
        - "$ref": "#/definitions/DataAgreementDPIA"
        description: DPIA metadata
      event:
        items:
          "$ref": "#/definitions/DataAgreementEvent"
        type: array
      id:
        description: Data agreement identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      lawful_basis:
        description: Legal basis of processing
        enum:
        - consent
        - legal_obligation
        - contract
        - vital_interest
        - public_task
        - legitimate_interest
        example: consent
        type: string
      method_of_use:
        description: Method of use (or data exchange mode)
        enum:
        - data-source
        - data-using-service
        example: data-using-service
        type: string
      personal_data:
        description: Personal data (attributes)
        items:
          "$ref": "#/definitions/DataAgreementPersonalData"
        type: array
      proof:
        "$ref": "#/definitions/DataAgreementProof"
      proofChain:
        description: Data agreement proof chain
        items:
          "$ref": "#/definitions/DataAgreementProof"
        type: array
      purpose:
        description: Usage purpose title
        example: Customized shopping experience
        type: string
      purpose_description:
        description: Usage purpose description
        example: Collecting user data for offering custom tailored shopping experience
        type: string
      template_id:
        description: Data agreement template identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      template_version:
        description: Data agreement template version
        example: 1
        format: int32
        type: integer
      version:
        description: Data agreement version
        example: 1
        format: int32
        type: integer
    required:
    - data_policy
    - lawful_basis
    - method_of_use
    - personal_data
    - purpose
    - purpose_description
    type: object
  DataAgreementPersonalData:
    properties:
      attribute_category:
        description: Category of the attribute
        example: Personal
        type: string
      attribute_description:
        description: The description of the attribute.
        example: Name of the customer
        type: string
      attribute_id:
        description: Attribute identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      attribute_name:
        description: Name of the attribute
        example: Name
        type: string
      attribute_sensitive:
        description: Sensitivity of the attribute
        example: true
        type: boolean
      restrictions:
        items:
          "$ref": "#/definitions/DataAgreementPersonalDataRestriction"
        type: array
    required:
    - attribute_description
    - attribute_name
    type: object
  DataAgreementPersonalDataRecord:
    properties:
      attribute_category:
        description: The category of the attribute.
        example: personal
        type: string
      attribute_description:
        description: The description of the attribute.
        example: Name of the customer
        type: string
      attribute_name:
        description: The name of the attribute.
        example: name
        type: string
      attribute_sensitive:
        description: The sensitive flag of the attribute.
        example: 'true'
        type: string
      created_at:
        description: Time of record creation
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
      da_template_id:
        description: The data agreement template identifier.
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      da_template_version:
        description: Data agreement template version
        example: 1
        format: int32
        type: integer
      personal_data_id:
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      restrictions:
        items:
          "$ref": "#/definitions/DataAgreementPersonalDataRestriction"
        type: array
      state:
        description: Current record state
        example: active
        type: string
      trace:
        description: Record trace information, based on agent configuration
        type: boolean
      updated_at:
        description: Time of last record update
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
    required:
    - attribute_category
    - attribute_description
    - attribute_name
    - attribute_sensitive
    - da_template_id
    - personal_data_id
    type: object
  DataAgreementPersonalDataRestriction:
    properties:
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        type: string
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        type: string
    type: object
  DataAgreementProof:
    properties:
      created:
        description: Proof created date time in ISO 8601 format
        example: '2024-04-06T09:58:38.586744+00:00'
        type: string
      id:
        description: Proof identifier
        example: did:mydata:123456789abcdefghi#1
        type: string
      proofPurpose:
        description: Proof purpose
        example: contractAgreement
        type: string
      proofValue:
        description: Proof value
        example: 123456789abcdefghi
        type: string
      type:
        description: Proof type
        example: Ed25519Signature2018
        type: string
      verificationMethod:
        description: Verification method
        example: did:mydata:123456789abcdefghi
        type: string
    type: object
  DataAgreementQRCodeInvitation:
    properties:
      recipient_key:
        description: Recipient key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        type: string
      service_endpoint:
        description: Service endpoint
        example: http://localhost:8080/
        type: string
    type: object
  DataAgreementV1RecordResponse:
    properties:
      cred_def_id:
        type: string
      data_agreement:
        type: object
      delete_flag:
        type: string
      existing_schema_flag:
        type: string
      latest_version_flag:
        type: string
      method_of_use:
        type: string
      presentation_request:
        type: object
      publish_flag:
        type: string
      schema_id:
        type: string
      state:
        type: string
      template_id:
        type: string
    type: object
  DataPolicyOpenAPI:
    properties:
      dataRetentionPeriod:
        format: int32
        type: integer
      geographicRestriction:
        type: string
      industrySector:
        type: string
      jurisdiction:
        type: string
      policyUrl:
        type: string
      storageLocation:
        type: string
      thirdPartyDataSharing:
        type: boolean
    type: object
  GenerateDataAgreementQrCodePayloadResponse:
    properties:
      connection_id:
        description: Connection ID
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        type: string
      invitation:
        allOf:
        - "$ref": "#/definitions/DataAgreementQRCodeInvitation"
        description: Connection invitation information
      qr_id:
        description: QR code ID
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        type: string
    type: object
  GenerateFirebaseDynamicLinkForConnectionInvitationResponse:
    properties:
      firebase_dynamic_link:
        description: Firebase dynamic link
        example: https://example.page.link/UVWXYZuvwxyz12345
        type: string
    type: object
  GetExistingConnectionResponse:
    properties:
      connection_id:
        type: string
      connection_status:
        type: string
      existing_connection_id:
        type: string
      my_did:
        type: string
    type: object
  IndyRequestedCredsRequestedAttr:
    properties:
      cred_id:
        description: Wallet credential identifier (typically but not necessarily a
          UUID)
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      revealed:
        description: Whether to reveal attribute in proof
        type: boolean
      timestamp:
        description: Epoch timestamp of interest for non-revocation proof
        example: 1712397495
        format: int32
        maximum: 9223372036854776000
        minimum: -9223372036854776000
        type: integer
    required:
    - cred_id
    - revealed
    type: object
  IndyRequestedCredsRequestedPred:
    properties:
      cred_id:
        description: Wallet credential identifier (typically but not necessarily a
          UUID)
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      timestamp:
        description: Epoch timestamp of interest for non-revocation proof
        example: 1712397495
        format: int32
        maximum: 9223372036854776000
        minimum: -9223372036854776000
        type: integer
    required:
    - cred_id
    type: object
  InvitationCreateRequest:
    properties:
      attachments:
        items:
          "$ref": "#/definitions/AttachmentDef"
        type: array
      include_handshake:
        type: boolean
      use_public_did:
        type: boolean
    type: object
  InvitationReceiveRequest:
    properties:
      "@id":
        description: Message identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      "@type":
        description: Message type
        example: https://didcomm.org/my-family/1.0/my-message-type
        readOnly: true
        type: string
      handshake_protocols:
        items:
          type: string
        type: array
      label:
        description: Optional label
        example: Bob
        type: string
      request~attach:
        items:
          "$ref": "#/definitions/AttachDecorator"
        type: array
      service: {}
      service_blocks:
        items:
          "$ref": "#/definitions/Service"
        type: array
      service_dids:
        items:
          type: string
        type: array
    required:
    - request~attach
    type: object
  InvitationResult:
    properties:
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      invitation:
        "$ref": "#/definitions/ConnectionInvitation"
      invitation_url:
        description: Invitation URL
        example: http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==
        type: string
    type: object
  MenuForm:
    properties:
      description:
        description: Additional descriptive text for menu form
        example: Window preference settings
        type: string
      params:
        description: List of form parameters
        items:
          "$ref": "#/definitions/MenuFormParam"
        type: array
      submit-label:
        description: Alternative label for form submit button
        example: Send
        type: string
      title:
        description: Menu form title
        example: Preferences
        type: string
    type: object
  MenuFormParam:
    properties:
      default:
        description: Default parameter value
        example: '0'
        type: string
      description:
        description: Additional descriptive text for menu form parameter
        example: Delay in seconds before starting
        type: string
      name:
        description: Menu parameter name
        example: delay
        type: string
      required:
        description: Whether parameter is required
        example: 'False'
        type: boolean
      title:
        description: Menu parameter title
        example: Delay in seconds
        type: string
      type:
        description: Menu form parameter input type
        example: int
        type: string
    required:
    - name
    - title
    type: object
  MenuJson:
    properties:
      description:
        description: Introductory text for the menu
        example: User preferences for window settings
        type: string
      errormsg:
        description: Optional error message to display in menu header
        example: 'Error: item not present'
        type: string
      options:
        description: List of menu options
        items:
          "$ref": "#/definitions/MenuOption"
        type: array
      title:
        description: Menu title
        example: My Menu
        type: string
    required:
    - options
    type: object
  MenuOption:
    properties:
      description:
        description: Additional descriptive text for menu option
        example: Window display preferences
        type: string
      disabled:
        description: Whether to show option as disabled
        example: 'False'
        type: boolean
      form:
        "$ref": "#/definitions/MenuForm"
      name:
        description: Menu option name (unique identifier)
        example: window_prefs
        type: string
      title:
        description: Menu option title
        example: Window Preferences
        type: string
    required:
    - name
    - title
    type: object
  MyDataDIDDoc:
    properties:
      "@context":
        description: The DIDDoc context
        example: https://w3id.org/did/v1
        type: string
      authentication:
        items:
          "$ref": "#/definitions/MyDataDIDDocAuthentication"
        type: array
      id:
        example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
        type: string
      service:
        items:
          "$ref": "#/definitions/MyDataDIDDocService"
        type: array
      verification_method:
        items:
          "$ref": "#/definitions/MyDataDIDDocVerificationMethod"
        type: array
    required:
    - "@context"
    - authentication
    - id
    - service
    - verification_method
    type: object
  MyDataDIDDocAuthentication:
    properties:
      publicKey:
        example: did:mydata:fz6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E#1
        type: string
      type:
        example: Ed25519SignatureAuthentication2018
        type: string
    required:
    - publicKey
    - type
    type: object
  MyDataDIDDocService:
    properties:
      id:
        example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E;didcomm
        type: string
      priority:
        example: 1
        format: int32
        type: integer
      recipientKeys:
        items:
          example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
          type: string
        type: array
      serviceEndpoint:
        example: https://didcomm.org
        type: string
      type:
        example: DIDComm
        type: string
    required:
    - id
    - priority
    - recipientKeys
    - serviceEndpoint
    - type
    type: object
  MyDataDIDDocVerificationMethod:
    properties:
      controller:
        example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
        type: string
      id:
        example: did:mydata:z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E#1
        type: string
      publicKeyBase58:
        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
        type: string
      type:
        example: Ed25519VerificationKey2018
        type: string
    required:
    - controller
    - id
    - publicKeyBase58
    - type
    type: object
  MyDataDIDRemoteRecordResponse:
    properties:
      did:
        description: MyData decentralised identifier
        example: z6MkfiSdYhnLnS6jfwSf2yS2CiwwjZGmFUFL5QbyL2Xu8z2E
        pattern: "^did:mydata(:?(?P<did_type>0|1|2|3|4))?:(?P<identifier>z[a-km-zA-HJ-NP-Z1-9]+)"
        type: string
      did_doc:
        allOf:
        - "$ref": "#/definitions/MyDataDIDDoc"
        description: MyData DID document
      sov_verkey:
        description: Sovrin verkey
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
        type: string
      status:
        description: MyData DID remote status
        enum:
        - active
        - revoked
        type: string
    type: object
  PerformRequest:
    properties:
      name:
        description: Menu option name
        example: Query
        type: string
      params:
        additionalProperties:
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          type: string
        description: Input parameter values
        type: object
    type: object
  PersonalDataOpenAPI:
    properties:
      attributeCategory:
        type: string
      attributeDescription:
        type: string
      attributeId:
        type: string
      attributeName:
        type: string
      attributeSensitive:
        type: boolean
      restrictions:
        items:
          "$ref": "#/definitions/PersonalDataRestrictionOpenAPI"
        type: array
    type: object
  PersonalDataRestrictionOpenAPI:
    properties:
      credDefId:
        type: string
      schemaId:
        type: string
    type: object
  PingRequest:
    properties:
      comment:
        description: Comment for the ping message
        type: string
        x-nullable: true
    type: object
  PingRequestResponse:
    properties:
      thread_id:
        description: Thread ID of the ping message
        type: string
    type: object
  PresAttrSpec:
    properties:
      cred_def_id:
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      mime-type:
        description: MIME type (default null)
        example: image/jpeg
        type: string
      name:
        description: Attribute name
        example: favourite_drink
        type: string
      referent:
        description: Credential referent
        example: '0'
        type: string
      value:
        description: Attribute value
        example: martini
        type: string
    required:
    - name
    type: object
  PresPredSpec:
    properties:
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      name:
        description: Attribute name
        example: high_score
        type: string
      predicate:
        description: Predicate type ('<', '<=', '>=', or '>')
        enum:
        - "<"
        - "<="
        - ">="
        - ">"
        example: ">="
        type: string
      threshold:
        description: Threshold value
        format: int32
        type: integer
    required:
    - name
    - predicate
    - threshold
    type: object
  PresentationPreview:
    properties:
      "@type":
        description: Message type identifier
        example: https://didcomm.org/present-proof/1.0/presentation-preview
        type: string
      attributes:
        items:
          "$ref": "#/definitions/PresAttrSpec"
        type: array
      predicates:
        items:
          "$ref": "#/definitions/PresPredSpec"
        type: array
    required:
    - attributes
    - predicates
    type: object
  PublishRevocations:
    properties:
      rrid2crid:
        additionalProperties:
          items:
            description: Credential revocation identifier
            example: '12345'
            pattern: "^[1-9][0-9]*$"
            type: string
          type: array
        description: Credential revocation ids by revocation registry id
        type: object
    type: object
  QueryDataAgreementQRCodeMetadataRecordsResponse:
    properties:
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      data_agreement_id:
        description: Data Agreement identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      data_exchange_record_id:
        type: string
      is_scanned:
        type: boolean
      multi_use:
        type: boolean
      qr_id:
        description: QR code identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
    type: object
  QueryResult:
    properties:
      results:
        additionalProperties:
          description: Protocol descriptor
          type: object
        description: Query results keyed by protocol
        type: object
    type: object
  ReceiveInvitationRequest:
    properties:
      "@id":
        description: Message identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      "@type":
        description: Message type
        example: https://didcomm.org/my-family/1.0/my-message-type
        readOnly: true
        type: string
      did:
        description: DID for connection invitation
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      imageUrl:
        description: Optional image URL for connection invitation
        example: http://192.168.56.101/img/logo.jpg
        format: url
        type: string
        x-nullable: true
      label:
        description: Optional label for connection
        example: Bob
        type: string
      recipientKeys:
        description: List of recipient keys
        items:
          description: Recipient public key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
          pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          type: string
        type: array
      routingKeys:
        description: List of routing keys
        items:
          description: Routing key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
          pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$"
          type: string
        type: array
      serviceEndpoint:
        description: Service endpoint at which to reach this agent
        example: http://192.168.56.101:8020
        type: string
    type: object
  RevRegCreateRequest:
    properties:
      credential_definition_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      max_cred_num:
        description: Revocation registry size
        example: 1000
        format: int32
        maximum: 32768
        minimum: 4
        type: integer
    type: object
  RevRegIssuedResult:
    properties:
      result:
        description: Number of credentials issued against revocation registry
        example: 0
        format: int32
        minimum: 0
        type: integer
    type: object
  RevRegResult:
    properties: {}
    type: object
  RevRegUpdateTailsFileUri:
    properties:
      tails_public_uri:
        description: Public URI to the tails file
        example: http://192.168.56.133:6543/revocation/registry/WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0/tails-file
        format: url
        type: string
    required:
    - tails_public_uri
    type: object
  RevRegsCreated:
    properties:
      rev_reg_ids:
        items:
          description: Revocation registry identifiers
          example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
          pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
          type: string
        type: array
    type: object
  RevokeRequest:
    properties:
      cred_ex_id:
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-4[a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
        type: string
      cred_rev_id:
        description: Credential revocation identifier
        example: '12345'
        pattern: "^[1-9][0-9]*$"
        type: string
      publish:
        description: "(True) publish revocation to ledger immediately, or (default,
          False) mark it pending"
        type: boolean
      rev_reg_id:
        description: Revocation registry identifier
        example: WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:(.+$)"
        type: string
    type: object
  Schema:
    properties:
      attrNames:
        description: Schema attribute names
        items:
          description: Attribute name
          example: score
          type: string
        type: array
      id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
      name:
        description: Schema name
        example: schema_name
        type: string
      seqNo:
        description: Schema sequence number
        example: 10
        format: int32
        minimum: 1
        type: integer
      ver:
        description: Node protocol version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
      version:
        description: Schema version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
    type: object
  SchemaGetResults:
    properties:
      schema:
        "$ref": "#/definitions/Schema"
    type: object
  SchemaSendRequest:
    properties:
      attributes:
        description: List of schema attributes
        items:
          description: attribute name
          example: score
          type: string
        type: array
      schema_name:
        description: Schema name
        example: prefs
        type: string
      schema_version:
        description: Schema version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
    required:
    - attributes
    - schema_name
    - schema_version
    type: object
  SchemaSendResults:
    properties:
      schema:
        description: Schema result
        type: object
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
    required:
    - schema
    - schema_id
    type: object
  SchemasCreatedResults:
    properties:
      schema_ids:
        items:
          description: Schema identifiers
          example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
          pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
          type: string
        type: array
    type: object
  SendExistingConnectionsMessageHandlerRequest:
    properties:
      theirdid:
        description: Their DID
        example: QmWbsNYhMrjHiqZDTUASHg
        type: string
    required:
    - theirdid
    type: object
  SendJSONLDDIDCommProcessedDataMessageHandlerRequest:
    properties:
      data:
        type: object
      proof_chain:
        type: boolean
      signature_options:
        type: object
    type: object
  SendMenu:
    properties:
      menu:
        allOf:
        - "$ref": "#/definitions/MenuJson"
        description: Menu to send to connection
    required:
    - menu
    type: object
  SendMessage:
    properties:
      content:
        description: Message content
        example: Hello
        type: string
    type: object
  SendPresentationRequestForDataAgreementRequest:
    properties:
      connection_id:
        format: uuid
        type: string
      template_id:
        type: string
    required:
    - connection_id
    - template_id
    type: object
  Service:
    properties:
      did:
        description: ''
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      id:
        description: ''
        type: string
      recipientKeys:
        description: List of recipient keys
        items:
          description: Recipient public key
          example: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
          pattern: "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$"
          type: string
        type: array
      routingKeys:
        description: List of routing keys
        items:
          description: Routing key
          example: did:key:z6MkpTHR8VNsBxYAAWHut2Geadd9jSwuBV8xRoAnwWsdvktH
          pattern: "^did:key:z[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]+$"
          type: string
        type: array
      serviceEndpoint:
        description: Service endpoint at which to reach this agent
        example: http://192.168.56.101:8020
        type: string
      type:
        description: ''
        type: string
    required:
    - id
    - type
    type: object
  TAAAccept:
    properties:
      mechanism:
        type: string
      text:
        type: string
      version:
        type: string
    type: object
  TAAAcceptance:
    properties:
      mechanism:
        type: string
      time:
        format: int32
        type: integer
    type: object
  TAAInfo:
    properties:
      aml_record:
        "$ref": "#/definitions/AMLRecord"
      taa_accepted:
        "$ref": "#/definitions/TAAAcceptance"
      taa_record:
        "$ref": "#/definitions/TAARecord"
      taa_required:
        type: boolean
    type: object
  TAARecord:
    properties:
      digest:
        type: string
      text:
        type: string
      version:
        type: string
    type: object
  TAAResult:
    properties:
      result:
        "$ref": "#/definitions/TAAInfo"
    type: object
  UpdateControllerDetailsRequest:
    properties:
      cover_image_url:
        type: string
      description:
        type: string
      eula_url:
        type: string
      location:
        type: string
      logo_image_url:
        type: string
      organisation_did:
        type: string
      organisation_name:
        type: string
      organisation_type:
        type: string
      policy_url:
        type: string
    type: object
  UpdateDaPersonalDataInWalletRequest:
    properties:
      attribute_description:
        description: Attribute description
        example: Age of the patient
        type: string
    required:
    - attribute_description
    type: object
  UpdateDaPersonalDataInWalletResponse:
    properties:
      attribute_description:
        description: Attribute description
        example: Name of the patient
        type: string
      attribute_id:
        description: Attribute ID
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      attribute_name:
        description: Attribute name
        example: Name
        type: string
      created_at:
        description: Created at (Epoch time in seconds)
        example: 1578012800
        format: int32
        type: integer
      data_agreement_template_id:
        description: Data Agreement Template ID
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      data_agreement_template_version:
        description: Data Agreement Template version
        example: 1
        format: int32
        type: integer
      updated_at:
        description: Updated at (Epoch time in seconds)
        example: 1578012800
        format: int32
        type: integer
    type: object
  V10CredentialCreate:
    properties:
      auto_remove:
        description: Whether to remove the credential exchange record on completion
          (overrides --preserve-exchange-records configuration setting)
        type: boolean
      comment:
        description: Human-readable comment
        type: string
        x-nullable: true
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      credential_proposal:
        "$ref": "#/definitions/CredentialPreview"
      issuer_did:
        description: Credential issuer DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
      schema_issuer_did:
        description: Schema issuer DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_name:
        description: Schema name
        example: preferences
        type: string
      schema_version:
        description: Schema version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - credential_proposal
    type: object
  V10CredentialExchange:
    properties:
      auto_issue:
        description: Issuer choice to issue to request in this credential exchange
        example: false
        type: boolean
      auto_offer:
        description: Holder choice to accept offer in this credential exchange
        example: false
        type: boolean
      auto_remove:
        description: Issuer choice to remove this credential exchange record when
          complete
        example: false
        type: boolean
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      created_at:
        description: Time of record creation
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
      credential:
        description: Credential as stored
        type: object
      credential_definition_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      credential_exchange_id:
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      credential_id:
        description: Credential identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      credential_offer:
        description: "(Indy) credential offer"
        type: object
      credential_offer_dict:
        description: Serialized credential offer message
        type: object
      credential_proposal_dict:
        description: Serialized credential proposal message
        type: object
      credential_request:
        description: "(Indy) credential request"
        type: object
      credential_request_metadata:
        description: "(Indy) credential request metadata"
        type: object
      error_msg:
        description: Error message
        example: credential definition identifier is not set in proposal
        type: string
      initiator:
        description: 'Issue-credential exchange initiator: self or external'
        enum:
        - self
        - external
        example: self
        type: string
      parent_thread_id:
        description: Parent thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      raw_credential:
        description: Credential as received, prior to storage in holder wallet
        type: object
      revoc_reg_id:
        description: Revocation registry identifier
        type: string
      revocation_id:
        description: Credential identifier within revocation registry
        type: string
      role:
        description: 'Issue-credential exchange role: holder or issuer'
        enum:
        - holder
        - issuer
        example: issuer
        type: string
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
      state:
        description: Issue-credential exchange state
        example: credential_acked
        type: string
      template_id:
        type: string
      thread_id:
        description: Thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      trace:
        description: Record trace information, based on agent configuration
        type: boolean
      updated_at:
        description: Time of last record update
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
    type: object
  V10CredentialExchangeListResult:
    properties:
      results:
        description: Aries#0036 v1.0 credential exchange records
        items:
          "$ref": "#/definitions/V10CredentialExchange"
        type: array
    type: object
  V10CredentialIssueRequest:
    properties:
      comment:
        description: Human-readable comment
        type: string
        x-nullable: true
    type: object
  V10CredentialOfferRequest:
    properties:
      auto_issue:
        description: Whether to respond automatically to credential requests, creating
          and issuing requested credentials
        type: boolean
      auto_remove:
        description: Whether to remove the credential exchange record on completion
          (overrides --preserve-exchange-records configuration setting)
        type: boolean
      comment:
        description: Human-readable comment
        type: string
        x-nullable: true
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        format: uuid
        type: string
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      credential_preview:
        "$ref": "#/definitions/CredentialPreview"
      template_id:
        description: Data agreement template identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - connection_id
    type: object
  V10CredentialProblemReportRequest:
    properties:
      explain_ltxt:
        type: string
    required:
    - explain_ltxt
    type: object
  V10CredentialProposalRequestMand:
    properties:
      auto_remove:
        description: Whether to remove the credential exchange record on completion
          (overrides --preserve-exchange-records configuration setting)
        type: boolean
      comment:
        description: Human-readable comment
        type: string
        x-nullable: true
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        format: uuid
        type: string
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      credential_proposal:
        "$ref": "#/definitions/CredentialPreview"
      issuer_did:
        description: Credential issuer DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
      schema_issuer_did:
        description: Schema issuer DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_name:
        description: Schema name
        example: preferences
        type: string
      schema_version:
        description: Schema version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - connection_id
    - credential_proposal
    type: object
  V10CredentialProposalRequestOpt:
    properties:
      auto_remove:
        description: Whether to remove the credential exchange record on completion
          (overrides --preserve-exchange-records configuration setting)
        type: boolean
      comment:
        description: Human-readable comment
        type: string
        x-nullable: true
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        format: uuid
        type: string
      cred_def_id:
        description: Credential definition identifier
        example: WgWxqztrNooG92RXvxSTWv:3:CL:20:tag
        pattern: "^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+)):(.+)?$"
        type: string
      credential_proposal:
        "$ref": "#/definitions/CredentialPreview"
      issuer_did:
        description: Credential issuer DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_id:
        description: Schema identifier
        example: WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0
        pattern: "^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$"
        type: string
      schema_issuer_did:
        description: Schema issuer DID
        example: WgWxqztrNooG92RXvxSTWv
        pattern: "^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$"
        type: string
      schema_name:
        description: Schema name
        example: preferences
        type: string
      schema_version:
        description: Schema version
        example: '1.0'
        pattern: "^[0-9.]+$"
        type: string
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - connection_id
    type: object
  V10CredentialStoreRequest:
    properties:
      credential_id:
        type: string
    type: object
  V10PresentationCreateRequestRequest:
    properties:
      comment:
        type: string
        x-nullable: true
      proof_request:
        "$ref": "#/definitions/DAIndyProofRequest"
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - proof_request
    type: object
  V10PresentationExchange:
    properties:
      auto_present:
        description: Prover choice to auto-present proof as verifier requests
        example: false
        type: boolean
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      created_at:
        description: Time of record creation
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
      error_msg:
        description: Error message
        example: Invalid structure
        type: string
      initiator:
        description: 'Present-proof exchange initiator: self or external'
        enum:
        - self
        - external
        example: self
        type: string
      presentation:
        description: "(Indy) presentation (also known as proof)"
        type: object
      presentation_exchange_id:
        description: Presentation exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      presentation_proposal_dict:
        description: Serialized presentation proposal message
        type: object
      presentation_request:
        description: "(Indy) presentation request (also known as proof request)"
        type: object
      presentation_request_dict:
        description: Serialized presentation request message
        type: object
      role:
        description: 'Present-proof exchange role: prover or verifier'
        enum:
        - prover
        - verifier
        example: prover
        type: string
      state:
        description: Present-proof exchange state
        example: verified
        type: string
      template_id:
        type: string
      thread_id:
        description: Thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      trace:
        description: Record trace information, based on agent configuration
        type: boolean
      updated_at:
        description: Time of last record update
        example: '2024-04-06 09:58:15Z'
        pattern: "^\\d{4}-\\d\\d-\\d\\d[T ]\\d\\d:\\d\\d(?:\\:(?:\\d\\d(?:\\.\\d{1,6})?))?(?:[+-]\\d\\d:?\\d\\d|Z|)$"
        type: string
      verified:
        description: 'Whether presentation is verified: true or false'
        enum:
        - 'true'
        - 'false'
        example: 'true'
        type: string
    type: object
  V10PresentationExchangeList:
    properties:
      results:
        description: Aries RFC 37 v1.0 presentation exchange records
        items:
          "$ref": "#/definitions/V10PresentationExchange"
        type: array
    type: object
  V10PresentationProposalRequest:
    properties:
      auto_present:
        description: Whether to respond automatically to presentation requests, building
          and presenting requested proof
        type: boolean
      comment:
        description: Human-readable comment
        type: string
        x-nullable: true
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        format: uuid
        type: string
      presentation_proposal:
        "$ref": "#/definitions/PresentationPreview"
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - connection_id
    - presentation_proposal
    type: object
  V10PresentationRequest:
    properties:
      requested_attributes:
        additionalProperties:
          "$ref": "#/definitions/IndyRequestedCredsRequestedAttr"
        description: Nested object mapping proof request attribute referents to requested-attribute
          specifiers
        type: object
      requested_predicates:
        additionalProperties:
          "$ref": "#/definitions/IndyRequestedCredsRequestedPred"
        description: Nested object mapping proof request predicate referents to requested-predicate
          specifiers
        type: object
      self_attested_attributes:
        additionalProperties:
          description: Self-attested attribute values to use in requested-credentials
            structure for proof construction
          example: self_attested_value
          type: string
        description: Self-attested attributes to build into proof
        type: object
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - requested_attributes
    - requested_predicates
    - self_attested_attributes
    type: object
  V10PresentationSendRequestRequest:
    properties:
      comment:
        type: string
        x-nullable: true
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        format: uuid
        type: string
      proof_request:
        "$ref": "#/definitions/DAIndyProofRequest"
      trace:
        description: Whether to trace event (default false)
        example: false
        type: boolean
    required:
    - connection_id
    - proof_request
    type: object
  V2InvitationResult:
    properties:
      connection_id:
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        type: string
      invitation:
        "$ref": "#/definitions/ConnectionInvitation"
      invitation_url:
        description: Invitation URL
        example: http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ==
        type: string
    type: object
  V2ReceiveConnectionInvitationRequest:
    properties:
      connection_url:
        type: string
    type: object
tags:
- name: Auditor
  description: Data Agreement Proofs Protocol (ADA RFC 0004)
  externalDocs:
    description: Specification
    url: https://github.com/decentralised-dataexchange/automated-data-agreements
- name: Data Agreement
  description: Data Agreement Protocol (ADA RFC 0002)
  externalDocs:
    description: Specification
    url: https://github.com/decentralised-dataexchange/automated-data-agreements
- name: MyData DID
  description: MyData DID Protocol (ADA RFC 0001)
  externalDocs:
    description: Specification
    url: https://github.com/decentralised-dataexchange/automated-data-agreements
- name: Data Controller
  description: Data Controller functions
- name: Data Disclosure Agreements
  description: Data Disclosure Agreement - Core Functions
  externalDocs:
    description: Specification
    url: https://github.com/decentralised-dataexchange/data-exchange-agreements
- name: Data Subject
  description: Data Subject functions
- name: JSON-LD
  description: JSON-LD functions
- name: Connection
  description: Connection management
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/9b0aaa39df7e8bd434126c4b33c097aae78d65bf/features/0160-connection-protocol
- name: Credential Definition
  description: Credential definition operations
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#cred_def
- name: Credentials
  description: Holder credential management
  externalDocs:
    description: Overview
    url: https://w3c.github.io/vc-data-model/#credentials
- name: Credential Issuance
  description: Credential issue, revocation
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/bb42a6c35e0d5543718fb36dd099551ab192f7b0/features/0036-issue-credential
- name: Trust Anchor
  description: Interaction with ledger
  externalDocs:
    description: Overview
    url: https://hyperledger-indy.readthedocs.io/projects/plenum/en/latest/storage.html#ledger
- name: Verification
  description: Proof presentation
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/aries-rfcs/tree/4fae574c03f9f1013db30bf2c0c676b1122f7149/features/0037-present-proof
- name: Schema
  description: Schema operations
  externalDocs:
    description: Specification
    url: https://github.com/hyperledger/indy-node/blob/master/design/anoncreds.md#schema
- name: Wallet
  description: DID and tag policy management
  externalDocs:
    description: Design
    url: https://github.com/hyperledger/indy-sdk/tree/master/docs/design/003-wallet-storage
